@page "/roomDetails/{Id:int}"
@using HotelServiceSystem.Interfaces.Services
@using HotelServiceSystem.Entities
@using HotelServiceSystem.Core.Helpers
@using HotelServiceSystem.Core

@inject IRoomService roomService;
@inject NavigationManager navigationManager
@inject IAdditionalServiceService additionalServiceService

@if (ModelRoom != null)
{
    <MatAccordion> 
        <MatExpansionPanel> 
            <MatExpansionPanelSummary> 
                <MatExpansionPanelHeader>Edit room</MatExpansionPanelHeader> 
            </MatExpansionPanelSummary> 
            <MatExpansionPanelDetails> 
                <HssRoomInput ModelRoom="@ModelRoom" AdditionalServiceList="@AdditionalServices" OnSubmit="@SaveRoom"/>
            </MatExpansionPanelDetails> 
        </MatExpansionPanel>
    </MatAccordion>
    <div class="card">
        <div class="card-body">
            <p>Room identifier : @ModelRoom.RoomIdentifier</p>
            <p>Floor : @ModelRoom.Floor</p>
            <p>Price : @ModelRoom.Price</p>
            <p>Single beds : @ModelRoom.CountBeds(BedType.SingleBed)</p>
            <p>Double beds : @ModelRoom.CountBeds(BedType.DoubleBed)</p>
            <p>Status : <HssRoomStatus RoomModel="ModelRoom"/></p>
            @foreach (var addService in ModelRoom.AdditionalServiceRooms)
            {
                <MatChip Label="@addService.AdditionalService.Name" IsCheckable="@false"/>
            }
        </div>
    </div>
}
else
{
    <p>waiting...</p>
}


@code {
    [Parameter]
    public int Id { get; set; }
    
    private Room ModelRoom { get; set; }

    private bool IsEdit { get; set; }

    private List<AdditionalService> AdditionalServices { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AdditionalServices = additionalServiceService.GetAllAdditionalServices(x => x.ServiceType == ServiceType.Room);
        ModelRoom = await roomService.GetRoomById(Id);
        await base.OnInitializedAsync();
    }
    
    private async Task SaveRoom(Room room)
    {
        await roomService.UpdateRoomAsync(ModelRoom);
        navigationManager.NavigateTo("/rooms");
    }
}