@page "/roomDetails/{Id:int}"
@using HotelServiceSystem.Interfaces.Services
@using HotelServiceSystem.Entities
@using HotelServiceSystem.Core.Helpers
@using HotelServiceSystem.Core
@using HotelServiceSystem.Interfaces.Helpers

@inject IRoomService roomService;
@inject IAdditionalServiceService additionalServiceService
@inject IReservationHelper ReservationHelper
@inject NavigationManager NavigationManager

@if (ModelRoom != null)
{
    <MudGrid>
        <MudItem xs="12">
            <MudCard Elevation="25">
                 <MudExpansionPanel HideIcon="@true" IsExpanded="PanelExpanded">
                            <TitleContent>
                                <div class="d-flex">
                                    <MudIcon Icon="@Icons.Rounded.Edit" class="mr3"/>
                                    <MudText> Edytuj pokój</MudText>
                                </div>
                            </TitleContent>
                            <ChildContent>
                                <HssRoomInput ModelRoom="@ModelRoom" IsEdit="@true" AdditionalServiceList="@AdditionalServices" OnSubmit="@SaveRoom"/>
                            </ChildContent>
                     </MudExpansionPanel>
            </MudCard>
        </MudItem>
        <MudItem xs="8">
            <MudCard Elevation="25">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudGrid Justify="Justify.SpaceEvenly">
                            <MudItem xs="12" sm="4">
                                <MudText Align="Align.Center" Typo="Typo.h6" Inline="@true" GutterBottom="@true">Pokój <strong><u>@ModelRoom.RoomIdentifier</u></strong> szczegóły</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="4">
                                <MudHidden Breakpoint="Breakpoint.Xs"/>
                            </MudItem>
                            <MudItem xs="12" sm="4">
                                <MudField Label="Status" DisableUnderLine="@true"> <HssRoomStatus RoomModel="@ModelRoom"/> </MudField>
                            </MudItem>
                        </MudGrid>
                        <MudItem xs="12">
                            <MudDivider DividerType="DividerType.Middle"/>
                        </MudItem>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12" sm="6">
                            <MudField Label="Piętro" Variant="Variant.Outlined">@ModelRoom.Floor</MudField>               
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudField Label="Cena" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Rounded.AttachMoney" Variant="Variant.Outlined">@ModelRoom.Price</MudField>                   
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudField Label="Łóżka pojedyńcze" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Rounded.SingleBed">
                                x @ModelRoom.CountBeds(BedType.SingleBed)
                            </MudField>
                        </MudItem>
                        <MudItem xs="12" sm="6">
                            <MudField Label="Łóżka podwójne" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Rounded.KingBed">
                                x @ModelRoom.CountBeds(BedType.DoubleBed)
                            </MudField>
                        </MudItem>
                        <MudItem xs="12">
                            <MudField Variant="Variant.Outlined" Label="Serwisy dodatkowe">
                                @foreach (var addService in ModelRoom.AdditionalServiceRooms)
                                {
                                    <MudChip Text="@addService.AdditionalService.Name"/>
                                }
                            </MudField>
                        </MudItem>
                        <MudItem xs="10">
                            <MudField Label="Rezerwacje" Variant="Variant.Outlined">
                                @if (_futureReservations.Any())
                                {
                                    <ul class="selectable-ul" style="border: none; width:inherit">
                                        @foreach (var item in _futureReservations)
                                        {
                                            <li @onclick="@(() => Select(item.Id))">
                                                <div style="justify-content: space-between">
                                                    <MudGrid Spacing="0">
                                                        <MudItem xs="12" sm="6">
                                                            <MudText>Numer: @item.Id</MudText>
                                                        </MudItem>
                                                        <MudItem xs="12" sm="6">
                                                            <MudText>Przybycie: @item.DateFrom.ToString(Constants.DefaultDateFormat)</MudText>
                                                        </MudItem>
                                                        <MudItem xs="12" sm="6">
                                                            <MudText>Klient: @GetClientValue(item.Client)</MudText>
                                                        </MudItem>
                                                        <MudItem xs="12" sm="6">
                                                            <MudText>Wymeldowanie: @item.DateTo.ToString(Constants.DefaultDateFormat)</MudText>
                                                        </MudItem>
                                                    </MudGrid>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    @("Pokój nie ma przyszłych rezerwacji")
                                }
                            </MudField>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xl="4">
            <MudCard Elevation="25">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Aktywna rezerwacja</MudText>
                        <MudDivider DividerType="DividerType.Middle"/>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudGrid>
                        @if (currentReservation != null)
                        {
                            <MudItem xs="12">
                                <MudField Label="Numer" Variant="Variant.Outlined">@currentReservation.Id</MudField>
                            </MudItem>
                            <MudItem xs="12">
                                <MudField Label="Klient" Variant="Variant.Outlined">@GetClientValue(currentReservation.Client)</MudField>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudField Label="Przybycie" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Rounded.FlightLand">@currentReservation.DateFrom.ToString(Constants.DefaultDateFormat)</MudField>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudField Label="Wymeldowanie" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Rounded.DirectionsRun">@currentReservation.DateTo.ToString(Constants.DefaultDateFormat)</MudField>
                            </MudItem>
                        }
                        else
                        {
                            <MudItem xs="12">
                                <MudText Typo="Typo.h6" Align="Align.Center">Pokój jest aktualnie wolny</MudText>
                            </MudItem>
                        }
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
}
else
{
    <p>waiting...</p>
}


@code {
    [Parameter]
    public int Id { get; set; }
    
    private Room ModelRoom { get; set; }
    
    private bool PanelExpanded { get; set; }

    private List<AdditionalService> AdditionalServices { get; set; }
    
    private IEnumerable<Reservation> _futureReservations = new List<Reservation>();
    
    private DateTime _today = DateTime.Today.Date;

    private HotelReservation currentReservation;

    protected override async Task OnInitializedAsync()
    {
        AdditionalServices = additionalServiceService.GetAllAdditionalServices(x => x.ServiceType == ServiceType.Room);
        ModelRoom = await roomService.GetRoomById(Id);

        if (ModelRoom.RoomReservations is {} roomReservations)
        {
            currentReservation = (HotelReservation) roomReservations.SingleOrDefault(x => x.Reservation.DateFrom <= _today && x.Reservation.DateTo >= _today && !x.Reservation.HasFinished)?.Reservation;
            _futureReservations = roomReservations.Where(x => x.Reservation.DateFrom > DateTime.Today.ToLocalTime()).Select(x => x.Reservation);
        }
        
        await base.OnInitializedAsync();
    }
    
    private async Task SaveRoom(Room room)
    {
        await roomService.UpdateRoomAsync(ModelRoom);
        PanelExpanded = false;
    }

    private void Select(int id)
    {
        NavigationManager.NavigateTo($"hotelReservationDetails/{id}");
    }

    private  string GetClientValue(Client client)
    {
        return client == null ? string.Empty : ReservationHelper.GetClientFirstNameLastName(client);
    }
}