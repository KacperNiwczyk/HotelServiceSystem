@page "/users"
@using HotelServiceSystem.Interfaces.Services
@using HotelServiceSystem.Entities
@inject IUserService userService
@inject NavigationManager navigationManager

<div class="col-12">
    <MudExpansionPanel HideIcon="@true">
        <TitleContent>
            <div class="d-flex">
                <MudIcon Icon="@Icons.Rounded.Add" class="mr3"/>
                <MudText> Add user</MudText>
            </div>
        </TitleContent>
        <ChildContent>
            <HssUserInput UserModel="@(new User())" OnSubmit="OnUserAdd"/>
        </ChildContent>
    </MudExpansionPanel>
    <div class="col-10">
        <table class="table">
            <thead>
            <tr>
                <th>ID</th>
                <th>User name</th>
                <th>Role</th>
                <th>Last login</th>
            </tr>
            </thead>
            <tbody>
            @if (UserList != null)
            {
                foreach (var user in UserList)
                {
                    <tr>
                        <td>@user.Id</td>
                        <td>@user.UserName</td>
                        <td>@user.UserRole</td>
                        <td>@user.LastLogin</td>
                        @*<td><MatButton Type="Button" OnClick="@(() => ShowDetails(user.Id))">Detials</MatButton></td>*@
                    </tr>
                }
            }
            else
            {
                <h3>..Loading</h3>
            }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<User> UserList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        UserList = userService.GetAllUserAsync();
        await base.OnInitializedAsync();
    }

    private async Task OnUserAdd(User user)
    {
        await userService.AddUserAsync(user);
        UserList.Add(user);
    }

    private void ShowDetails(int id)
    {
        navigationManager.NavigateTo($"userDetails/{id}");
    }

}