@using HotelServiceSystem.Entities
@using HotelServiceSystem.Core
@inject NavigationManager navigationManager

<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudGrid>
                <MudItem xs="12">
                    <MudText>Pokoje do posprzątania</MudText>
                </MudItem>
                <MudItem xs="12">
                    <MudDivider DividerType="DividerType.Middle"/>
                </MudItem>
            </MudGrid>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
    @if (RoomList.Count > 0)
    {
        <MudTable T="Room" Items="RoomList" Hover="@true" Dense="@true" SelectedItemChanged="@(item => ShowDetails(item.Id))">
            <HeaderContent>
                <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<Room, object>(x => x.RoomIdentifier))">Nazwa</MudTableSortLabel></MudTh>
                <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<Room, object>(x => BedCount(x, BedType.SingleBed)))">Łóżka pojedyńcze</MudTableSortLabel></MudTh>
                <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<Room, object>(x => BedCount(x, BedType.DoubleBed)))">Łóżka podwójne</MudTableSortLabel></MudTh>
                <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<Room, object>(x => x.Floor))">Piętro</MudTableSortLabel></MudTh>
                <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<Room, object>(GetRoomStatusValue))">Status</MudTableSortLabel></MudTh>
                <MudTh Class="hss-table-header">Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nazwa">@context.RoomIdentifier</MudTd>
                <MudTd DataLabel="Łóżka pojedyńcze">@BedCount(context, BedType.SingleBed)</MudTd>
                <MudTd DataLabel="Łóżka podwójne">@BedCount(context, BedType.DoubleBed)</MudTd>
                <MudTd DataLabel="Piętro">@context.Floor</MudTd>
                <MudTd DataLabel="Status"><HssRoomStatus RoomModel="@context"/></MudTd>
                <MudTd DataLabel="Akcja"><MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="@(() => OnRoomCleaned.InvokeAsync(context))">Posprzątany</MudButton></MudTd>
            </RowTemplate>
        </MudTable>
    }
    else
    {
        <MudText>Aktualnie żaden pokój nie wymaga sprzątania</MudText>
    }
    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public List<Room> RoomList { get; set; }

    [Parameter]
    public EventCallback<Room> OnRoomCleaned { get; set; }
    
    private void ShowDetails(int id)
    {
        navigationManager.NavigateTo($"roomDetails/{id}");
    }
    
    private int BedCount(Room room, BedType bedType)
    {
        return room.Beds.Count(x => x.BedType == bedType);
    }
    
    private string GetRoomStatusValue(Room room)
    {
        if (!room.IsFreeNow)
        {
            return "Occupied";
        }
        
        if(room.IsOutOfService)
        {
            return "Out of service";
        }
        
        if(room.ShouldBeCleaned)
        {
            return "Needs cleaning";
        }

        return "Available";
    }
}