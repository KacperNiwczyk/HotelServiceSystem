@using HotelServiceSystem.Entities
@inject NavigationManager navigationManager

<MudCard Elevation="25">
    <MudTable T="AdditionalService" Items="AdditionalServicesList" Hover="@true" Filter="@(new Func<AdditionalService, bool>(FilterFunc))" SelectedItemChanged="@(item => ShowServiceDetails(item.Id))">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Additional services</MudText>
            <MudToolBarSpacer/>
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<AdditionalService, object>(x => x.Id))">Id</MudTableSortLabel></MudTh>
            <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<AdditionalService, object>(x => x.Name))">Name</MudTableSortLabel></MudTh>
            <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<AdditionalService, object>(x => x.Price))">Price</MudTableSortLabel></MudTh>
            <MudTh Class="hss-table-header"><MudTableSortLabel SortBy="@(new Func<AdditionalService, object>(x => x.ServiceType))">Type</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Price">@context.Price</MudTd>
            <MudTd DataLabel="Type">@context.ServiceType</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="HssPagingSize.DefaultPageSize"/>
        </PagerContent>
    </MudTable>
</MudCard>

@code {
    [Parameter]
    public List<AdditionalService> AdditionalServicesList { get; set; }

    private string searchString = string.Empty;

    private bool FilterFunc(AdditionalService additionalService)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (additionalService.Id.ToString().Equals(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (additionalService.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
    
    private void ShowServiceDetails(int id)
    {
        navigationManager.NavigateTo($"additionalServiceDetails/{id}");
    }
}