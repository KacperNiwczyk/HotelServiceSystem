@using HotelServiceSystem.Entities
@using HotelServiceSystem.Core


<div class="col-12 row">
        <HssDatePicker Label="Arrival" OnValueChanged="@SetDateFrom" ValidationFor="@(() => ReservationModel.DateFrom)"/>
        @if (!IsOneDay)
        {
            <HssDatePicker Label="Departure" OnValueChanged="@SetDateTo" ValidationFor="@(() => ReservationModel.DateTo)" MinimalDate="@GetMinimalDepartureDate()"/>  
        }
    </div>

@code {

    [Parameter]
    public string ArrivalDateLabel { get; set; } = "Arrival";

    [Parameter]
    public string DepartureDateLabel { get; set; } = "Departure";
    
    [Parameter]
    public Reservation ReservationModel
    {
        get => _reservation;
        set
        {
            _reservation = value;
        } 
    }

    [Parameter]
    public bool IsOneDay { get; set; } = false;
    
    [Parameter]
    public EventCallback<Reservation> ReservationModelChanged { get; set; }
    
    [Parameter]
    public EventCallback<ReservationSpan> OnDatesSelected { get; set; }
    
    private Reservation _reservation { get; set; }

    private void SetDateFrom(DateTime dateTime)
    {
        ReservationModel.DateFrom = dateTime.ToLocalTime();
        CheckDatesSelected();
    }

    private void CheckDatesSelected()
    {
        if (ReservationModel.DateFrom != default && ReservationModel.DateTo != default)
        {
            var reservationSpan = new ReservationSpan(ReservationModel.DateFrom, ReservationModel.DateTo);
            OnDatesSelected.InvokeAsync(reservationSpan);
        }
    }

    private void SetDateTo(DateTime dateTime)
    {
        ReservationModel.DateTo = dateTime.ToLocalTime();
        CheckDatesSelected();
    }
    
    private DateTime GetMinimalDepartureDate()
    {
        return ReservationModel.DateFrom != default ? ReservationModel.DateFrom : DateTime.Now.ToLocalTime().AddDays(-1);
    }
}