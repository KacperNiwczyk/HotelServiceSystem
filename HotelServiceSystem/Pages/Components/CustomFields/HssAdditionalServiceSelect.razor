@using HotelServiceSystem.Interfaces.Services
@using HotelServiceSystem.Entities
@using HotelServiceSystem.Core
@using System.Linq.Expressions
@inject IAdditionalServiceService additionalServiceService

<div class="card">
    <div class="card-body" style="display: flex">
        <MatChipSet Filter="@true" @bind-SelectedChips="@_selectedChips" SelectedChipChanged="@OnChipChanged">
            @foreach (var additionalService in AdditionalServiceList)
            {
                <MatChip Label="@additionalService.Name" IsCheckable="true" Attributes="@(new Dictionary<string, object>{{IdAttribute, additionalService.Id}})"/>
            }
        </MatChipSet>
    </div>
</div>


@code {
        
    private const string IdAttribute = "Id";
    
    [Parameter]
    public List<AdditionalService> AdditionalServicesModel { get; set; }

    [Parameter]
    public EventCallback<List<AdditionalService>> OnAdditionalServicesModelChange { get; set; }
    
    [Parameter]
    public List<ServiceType> ServiceTypes { get; set; }

    private List<AdditionalService> AdditionalServiceList { get; set; }

    private MatChip[] _selectedChips = null;

    private void OnChipChanged(MatChip chip)
    {
        chip.Style = "background-color: green";
    }

    protected override async Task OnInitializedAsync()
    {
        AdditionalServicesModel = new List<AdditionalService>();
        AdditionalServiceList = additionalServiceService.GetAllAdditionalServices();
        AdditionalServiceList = AdditionalServiceList.Where(x => x.ServiceType == ServiceType.Room).ToList();
        await base.OnInitializedAsync();
    }
}