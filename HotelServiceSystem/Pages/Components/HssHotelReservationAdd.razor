@using HotelServiceSystem.Entities
@using HotelServiceSystem.Features
@using HotelServiceSystem.Interfaces.Services
@inject IHotelReservationService hotelReservationService
@inject IClientService clientService
@inject IRoomService roomService

<EditForm Model="@ReservationModel" OnValidSubmit="@SaveReservation">
        <HssSelectCustom Label="Client" @bind-Value="_selectedClient.Id" ValidationFor="@(() => _selectedClient.Id)">
            @foreach (var client in ClientList)
            {
                <option value="@client.Id">@client.FirstName @client.LastName</option>
            }
        </HssSelectCustom>
        <HssInputCustom Caption="Number of guests" @bind-Value="ReservationModel.NumberOfGuests"/>
        <div class="col-12 row">
            <label class="col-2">Date From</label>
            <MatDatePicker class="form-control col-3" @bind-Value="ReservationModel.DateFrom"/>
        </div>
        <div class="col-12 row">
            <label class="col-2">Date to</label>
            <MatDatePicker class="form-control col-3" @bind-Value="ReservationModel.DateTo"/>
        </div>
          <div class="form-group">
               <HSSMultiSelector Selected="@_selected" NotSelected="@_notSelected"></HSSMultiSelector>
          </div>
        <HssInputCustom Caption="Price" @bind-Value="ReservationModel.Price"/>
        <HssInputCustom Caption="Discount" @bind-Value="ReservationModel.Discount"/>
        <div class="col-12 row">
            <span class="col-2"></span>
            <input type="submit" class="form-control col-1 btn btn-primary" value="Submit"/>
        </div>
    </EditForm>

@code {
    private HotelReservation ReservationModel { get; set; }
    private Client _selectedClient = new Client();
    private readonly List<MultiSelector> _selected = new List<MultiSelector>();
    private List<MultiSelector> _notSelected = new List<MultiSelector>();
    private List<Room> _selectedRooms = new List<Room>();
    private List<Room> RoomList { get; set; }
    private List<Client> ClientList { get; set; }
    
    [Parameter]
    public EventCallback<HotelReservation> OnReservationAdd { get; set; }

    protected override async Task OnInitializedAsync()
    {
        RoomList = roomService.GetAllRoomsAsync();
        ClientList = clientService.GetAllClients();
        ReservationModel = new HotelReservation();
        _notSelected = RoomList.Select(x => new MultiSelector(x.Id.ToString(), $"Room Number : {x.RoomIdentifier}")).ToList();
        await base.OnInitializedAsync();
    }
    

    private async Task SaveReservation()
    {
        _selectedRooms = RoomList.Where(x => _selected.Any(y => y.Key == x.Id.ToString())).ToList();
        _selectedClient = ClientList.FirstOrDefault(x => x.Id == _selectedClient.Id);
        ReservationModel.Client = _selectedClient;
        
        _selectedRooms.ForEach( x=> ReservationModel.RoomReservations.Add(new RoomReservation
        {
            HotelReservation = ReservationModel,
            Room = x
        }));

        await hotelReservationService.AddHotelReservationAsync(ReservationModel);
        await OnReservationAdd.InvokeAsync(ReservationModel);
        ReservationModel = new HotelReservation();
    }
}